{
  "Sections": [
    {
      "Errors": [],
      "SectionType": "simpleIntentSection",
      "Id": "simpleIntentSection_getUserName",
      "Body": "- call me {name:userName}\r\n- I'm {name:userName}\r\n- my name is {name:userName}\r\n",
      "UtteranceAndEntitiesMap": [
        {
          "utterance": "call me {name:userName}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "name",
              "role": "userName"
            }
          ],
          "errorMsgs": [],
          "contextText": "- call me {name:userName}",
          "range": {
            "Start": {
              "Line": 3,
              "Character": 0
            },
            "End": {
              "Line": 3,
              "Character": 25
            }
          }
        },
        {
          "utterance": "I'm {name:userName}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "name",
              "role": "userName"
            }
          ],
          "errorMsgs": [],
          "contextText": "- I'm {name:userName}",
          "range": {
            "Start": {
              "Line": 4,
              "Character": 0
            },
            "End": {
              "Line": 4,
              "Character": 21
            }
          }
        },
        {
          "utterance": "my name is {name:userName}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "name",
              "role": "userName"
            }
          ],
          "errorMsgs": [],
          "contextText": "- my name is {name:userName}",
          "range": {
            "Start": {
              "Line": 5,
              "Character": 0
            },
            "End": {
              "Line": 5,
              "Character": 28
            }
          }
        }
      ],
      "Entities": [],
      "Name": "getUserName",
      "IntentNameLine": "# getUserName",
      "Range": {
        "Start": {
          "Line": 2,
          "Character": 0
        },
        "End": {
          "Line": 6,
          "Character": 0
        }
      }
    },
    {
      "Errors": [],
      "SectionType": "simpleIntentSection",
      "Id": "simpleIntentSection_getUserFirstName",
      "Body": "> this is another role for the same 'name' entity\r\n- [[my] first name is] {name:userFirstName}\r\n",
      "UtteranceAndEntitiesMap": [
        {
          "utterance": "[[my] first name is] {name:userFirstName}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "name",
              "role": "userFirstName"
            }
          ],
          "errorMsgs": [],
          "contextText": "- [[my] first name is] {name:userFirstName}",
          "range": {
            "Start": {
              "Line": 9,
              "Character": 0
            },
            "End": {
              "Line": 9,
              "Character": 43
            }
          }
        }
      ],
      "Entities": [],
      "Name": "getUserFirstName",
      "IntentNameLine": "# getUserFirstName",
      "Range": {
        "Start": {
          "Line": 7,
          "Character": 0
        },
        "End": {
          "Line": 10,
          "Character": 0
        }
      }
    },
    {
      "Errors": [],
      "SectionType": "simpleIntentSection",
      "Id": "simpleIntentSection_BookFlight",
      "Body": "> roles can be specified for list entity types as well - in this case fromCity and toCity are added as roles to the 'city' list entity defined further below\r\n- book flight from {city:fromCity} to {city:toCity}\r\n- [can you] get me a flight from {city:fromCity} to {city:toCity}\r\n- get me a flight to {city:toCity}\r\n- I need to fly from {city:fromCity}\r\n\r\n$city:Seattle=\r\n- Seattle\r\n- Tacoma\r\n- SeaTac\r\n- SEA\r\n\r\n$city:Portland=\r\n- Portland\r\n- PDX\r\n",
      "UtteranceAndEntitiesMap": [
        {
          "utterance": "book flight from {city:fromCity} to {city:toCity}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "city",
              "role": "fromCity"
            },
            {
              "type": "patternAnyEntities",
              "entity": "city",
              "role": "toCity"
            }
          ],
          "errorMsgs": [],
          "contextText": "- book flight from {city:fromCity} to {city:toCity}",
          "range": {
            "Start": {
              "Line": 13,
              "Character": 0
            },
            "End": {
              "Line": 13,
              "Character": 51
            }
          }
        },
        {
          "utterance": "[can you] get me a flight from {city:fromCity} to {city:toCity}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "city",
              "role": "fromCity"
            },
            {
              "type": "patternAnyEntities",
              "entity": "city",
              "role": "toCity"
            }
          ],
          "errorMsgs": [],
          "contextText": "- [can you] get me a flight from {city:fromCity} to {city:toCity}",
          "range": {
            "Start": {
              "Line": 14,
              "Character": 0
            },
            "End": {
              "Line": 14,
              "Character": 65
            }
          }
        },
        {
          "utterance": "get me a flight to {city:toCity}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "city",
              "role": "toCity"
            }
          ],
          "errorMsgs": [],
          "contextText": "- get me a flight to {city:toCity}",
          "range": {
            "Start": {
              "Line": 15,
              "Character": 0
            },
            "End": {
              "Line": 15,
              "Character": 34
            }
          }
        },
        {
          "utterance": "I need to fly from {city:fromCity}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "city",
              "role": "fromCity"
            }
          ],
          "errorMsgs": [],
          "contextText": "- I need to fly from {city:fromCity}",
          "range": {
            "Start": {
              "Line": 16,
              "Character": 0
            },
            "End": {
              "Line": 16,
              "Character": 36
            }
          }
        }
      ],
      "Entities": [
        {
          "Errors": [],
          "SectionType": "entitySection",
          "Id": "entitySection_city",
          "Body": "",
          "Name": "city",
          "Type": "Seattle=",
          "SynonymsOrPhraseList": [ "Seattle", "Tacoma", "SeaTac", "SEA" ],
          "Range": {
            "Start": {
              "Line": 18,
              "Character": 0
            },
            "End": {
              "Line": 22,
              "Character": 6
            }
          }
        },
        {
          "Errors": [],
          "SectionType": "entitySection",
          "Id": "entitySection_city",
          "Body": "",
          "Name": "city",
          "Type": "Portland=",
          "SynonymsOrPhraseList": [ "Portland", "PDX" ],
          "Range": {
            "Start": {
              "Line": 24,
              "Character": 0
            },
            "End": {
              "Line": 26,
              "Character": 6
            }
          }
        }
      ],
      "Name": "BookFlight",
      "IntentNameLine": "# BookFlight",
      "Range": {
        "Start": {
          "Line": 11,
          "Character": 0
        },
        "End": {
          "Line": 27,
          "Character": 0
        }
      }
    },
    {
      "Errors": [],
      "SectionType": "simpleIntentSection",
      "Id": "simpleIntentSection_setAlarm",
      "Body": "> prebuilt entitities can have roles as well.\r\n- create alarm for {datetimeV2:startTime}\r\n",
      "UtteranceAndEntitiesMap": [
        {
          "utterance": "create alarm for {datetimeV2:startTime}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "datetimeV2",
              "role": "startTime"
            }
          ],
          "errorMsgs": [],
          "contextText": "- create alarm for {datetimeV2:startTime}",
          "range": {
            "Start": {
              "Line": 30,
              "Character": 0
            },
            "End": {
              "Line": 30,
              "Character": 41
            }
          }
        }
      ],
      "Entities": [],
      "Name": "setAlarm",
      "IntentNameLine": "# setAlarm",
      "Range": {
        "Start": {
          "Line": 28,
          "Character": 0
        },
        "End": {
          "Line": 31,
          "Character": 0
        }
      }
    },
    {
      "Errors": [],
      "SectionType": "simpleIntentSection",
      "Id": "simpleIntentSection_deleteAlarm",
      "Body": "- remove the {datetimeV2:deleteTime} alarm\r\n\r\n> This is just defining datetimeV2 as a prebuilt entity type. If an explicit type is not specified, by default entities in patterns will be set to pattern.any entity type\r\n$PREBUILT:datetimeV2\r\n",
      "UtteranceAndEntitiesMap": [
        {
          "utterance": "remove the {datetimeV2:deleteTime} alarm",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "datetimeV2",
              "role": "deleteTime"
            }
          ],
          "errorMsgs": [],
          "contextText": "- remove the {datetimeV2:deleteTime} alarm",
          "range": {
            "Start": {
              "Line": 33,
              "Character": 0
            },
            "End": {
              "Line": 33,
              "Character": 42
            }
          }
        }
      ],
      "Entities": [
        {
          "Errors": [],
          "SectionType": "entitySection",
          "Id": "entitySection_PREBUILT",
          "Body": "",
          "Name": "PREBUILT",
          "Type": "datetimeV2",
          "SynonymsOrPhraseList": [],
          "Range": {
            "Start": {
              "Line": 36,
              "Character": 0
            },
            "End": {
              "Line": 36,
              "Character": 20
            }
          }
        }
      ],
      "Name": "deleteAlarm",
      "IntentNameLine": "# deleteAlarm",
      "Range": {
        "Start": {
          "Line": 32,
          "Character": 0
        },
        "End": {
          "Line": 37,
          "Character": 0
        }
      }
    },
    {
      "Errors": [],
      "SectionType": "simpleIntentSection",
      "Id": "simpleIntentSection_randomTestIntent",
      "Body": "- test {entity:foo}\r\n\r\n$entity: simple\r\n\r\n",
      "UtteranceAndEntitiesMap": [
        {
          "utterance": "test {entity:foo}",
          "entities": [
            {
              "type": "patternAnyEntities",
              "entity": "entity",
              "role": "foo"
            }
          ],
          "errorMsgs": [],
          "contextText": "- test {entity:foo}",
          "range": {
            "Start": {
              "Line": 39,
              "Character": 0
            },
            "End": {
              "Line": 39,
              "Character": 19
            }
          }
        }
      ],
      "Entities": [
        {
          "Errors": [],
          "SectionType": "entitySection",
          "Id": "entitySection_entity",
          "Body": "",
          "Name": "entity",
          "Type": "simple",
          "SynonymsOrPhraseList": [],
          "Range": {
            "Start": {
              "Line": 41,
              "Character": 0
            },
            "End": {
              "Line": 41,
              "Character": 15
            }
          }
        }
      ],
      "Name": "randomTestIntent",
      "IntentNameLine": "# randomTestIntent",
      "Range": {
        "Start": {
          "Line": 38,
          "Character": 0
        },
        "End": {
          "Line": 43,
          "Character": 0
        }
      }
    }
  ],
  "Content": "> You can use roles in patterns using the entityName:role notation.\n# getUserName\n- call me {name:userName}\n- I'm {name:userName}\n- my name is {name:userName}\n\n# getUserFirstName\n> this is another role for the same 'name' entity\n- [[my] first name is] {name:userFirstName}\n\n# BookFlight\n> roles can be specified for list entity types as well - in this case fromCity and toCity are added as roles to the 'city' list entity defined further below\n- book flight from {city:fromCity} to {city:toCity}\n- [can you] get me a flight from {city:fromCity} to {city:toCity}\n- get me a flight to {city:toCity}\n- I need to fly from {city:fromCity}\n\n$city:Seattle=\n- Seattle\n- Tacoma\n- SeaTac\n- SEA\n\n$city:Portland=\n- Portland\n- PDX\n\n# setAlarm\n> prebuilt entitities can have roles as well.\n- create alarm for {datetimeV2:startTime}\n\n# deleteAlarm\n- remove the {datetimeV2:deleteTime} alarm\n\n> This is just defining datetimeV2 as a prebuilt entity type. If an explicit type is not specified, by default entities in patterns will be set to pattern.any entity type\n$PREBUILT:datetimeV2\n\n# randomTestIntent\n- test {entity:foo}\n\n$entity: simple\n\n",
  "Errors": []
}
steps:
- powershell: 'gci env:* | sort-object name | Format-Table -AutoSize -Wrap'
  displayName: 'Display env vars'

# Variables ReleasePackageVersion and PreviewPackageVersion are consumed by projects in Microsoft.Bot.Builder.sln.
# For the signed build, they should be settable at queue time. To set that up, define the variables in Azure on the Variables tab.
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet '

- template: sdk_dotnet_v4_org-feed-setup-steps.yml

- task: PowerShell@2
  displayName: 'DEBUG: Upload Coverage Files to Coveralls.io https://coveralls.io/github/microsoft/botbuilder-dotnet'
  inputs:
    targetType: filePath
    filePath: '$(Build.SourcesDirectory)\build\PublishToCoveralls.ps1'
    arguments: '-pathToCoverageFiles "$(Build.SourcesDirectory)\CodeCoverage" -serviceName "CI-PR build"'
  continueOnError: true
  condition: and(succeeded(), eq(variables['PublishCoverage'], 'true'))

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    command: 'restore'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
    restoreSolution: '$(Parameters.solution)'

- task: VSBuild@1
  displayName: 'Build solution Microsoft.Bot.Builder.sln'
  inputs:
    solution: '$(Parameters.solution)'
    vsVersion: 16.0
    msbuildArgs: '$(MSBuildArguments)'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    maximumCpuCount: true
    logProjectEvents: false
    
- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
  inputs:
    failOnAlert: true

- script: |
   cd ..
   dir *.* /s
  displayName: 'Dir workspace'
  continueOnError: true
  condition: succeededOrFailed()
